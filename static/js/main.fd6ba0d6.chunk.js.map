{"version":3,"sources":["components/Bmr.js","App.js","reportWebVitals.js","index.js"],"names":["Bmr","handleGenderChange","event","setState","gender","target","value","handleWeightChange","weight","handleAgeChange","age","handleHeightCmChange","heightCm","handleActivityChange","activity","state","bmr","error","calories","this","resultBmr","calcCalories","resultCalories","className","onChange","name","type","onClick","CalculateCal","id","checked","min","max","calculateBMR","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fd6ba0d6.chunk.js","sourcesContent":["/* eslint-disable eqeqeq */\r\nimport React, { Component } from \"react\";\r\nimport \"./bmr.css\";\r\n\r\nexport class Bmr extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      gender: \"\",\r\n      weight: \"\",\r\n      age: \"\",\r\n      // heightFeet: '',\r\n      // heightInches: '',\r\n      heightCm: \"\",\r\n      activity: \"\",\r\n      bmr: \"\",\r\n      error: \"\",\r\n      calories: \"\",\r\n    };\r\n  }\r\n\r\n  handleGenderChange = (event) => {\r\n    this.setState({ gender: event.target.value });\r\n  };\r\n\r\n  handleWeightChange = (event) => {\r\n    this.setState({ weight: event.target.value });\r\n  };\r\n\r\n  handleAgeChange = (event) => {\r\n    this.setState({ age: event.target.value });\r\n  };\r\n\r\n  // handleHeightFeetChange =(event) => {\r\n  //     this.setState({heightFeet : event.target.value})\r\n  // }\r\n  handleHeightCmChange = (event) => {\r\n    this.setState({ heightCm: event.target.value });\r\n  };\r\n\r\n  // handleHeightInchesChange =(event) => {\r\n  //     this.setState({heightInches : event.target.value})\r\n  // }\r\n\r\n  handleActivityChange = (event) => {\r\n    this.setState({ activity: event.target.value });\r\n  };\r\n\r\n  calculateBMR() {\r\n    let age = this.state.age;\r\n    let weight = this.state.weight;\r\n    let heightCm = this.state.heightCm;\r\n    // let heightFeet = this.state.heightFeet;\r\n    // let heightInches = this.state.heightInches;\r\n    let gender = this.state.gender;\r\n\r\n    if (age == \"\" || weight == \"\" || gender == \"\" || heightCm == \"\") {\r\n      this.setState({ error: \"All fields are required.\" });\r\n      return;\r\n    }\r\n\r\n    let bmr = \"\";\r\n\r\n    if (gender == 1) {\r\n      bmr = 66.5 + 13.75 * weight + 5.003 * heightCm - 6.755 * age;\r\n    } else if (gender == 2) {\r\n      bmr = 655 + 9.563 * weight + 1.85 * heightCm - 4.676 * age;\r\n    }\r\n\r\n    // let height = ((heightFeet * 30.48)  + (heightInches * 2.54));\r\n    // if(gender==1){\r\n    //     bmr = 66.5 + ( 6.2  * weight ) + ( 12.7 * height ) - ( 6.76 * age );\r\n    // }\r\n    // else if(gender==2){\r\n    //     bmr = 655.1 + ( 4.35 * weight) + ( 4.7  * height) - ( 4.7 * age );\r\n    // }\r\n\r\n    this.setState({ bmr: bmr });\r\n    this.setState({ error: \"\" });\r\n  }\r\n\r\n  CalculateCal() {\r\n    let activity = this.state.activity;\r\n\r\n    let calories;\r\n    if (activity == 1.2) {\r\n      calories = this.state.bmr * 1.2;\r\n    } else if (activity == 1.375) {\r\n      calories = this.state.bmr * 1.375;\r\n    } else if (activity == 1.55) {\r\n      calories = this.state.bmr * 1.55;\r\n    } else if (activity == 1.725) {\r\n      calories = this.state.bmr * 1.725;\r\n    } else if (activity == 1.9) {\r\n      calories = this.state.bmr * 1.9;\r\n    }\r\n\r\n    this.setState({ calories: calories });\r\n  }\r\n\r\n  render() {\r\n    let error;\r\n    if (this.state.error) {\r\n      error = <div className=\"error\">{this.state.error}</div>;\r\n    }\r\n\r\n    let resultBmr;\r\n    if (this.state.bmr) {\r\n      resultBmr = <div className=\"result\">{this.state.bmr}</div>;\r\n    }\r\n\r\n    let calcCalories;\r\n    if (this.state.bmr) {\r\n      calcCalories = (\r\n        <div className=\"workout\">\r\n          <div className=\"inputwrap\">\r\n            <label className=\"label\">Workout in a Week</label>\r\n            <select\r\n              className=\"activity\"\r\n              value={this.state.activity}\r\n              onChange={this.handleActivityChange}\r\n              name=\"activity\"\r\n            >\r\n              <option value=\"\">Select your Activity</option>\r\n              <option value=\"1.2\">\r\n                Sedentary (Very little or no exercise, and desk job)\r\n              </option>\r\n              <option value=\"1.375\">\r\n                Lightly Active (Light exercise 1 to 3 days per week)\r\n              </option>\r\n              <option value=\"1.55\">\r\n                Moderately Active (Moderate exercise 3 to 5 days per week)\r\n              </option>\r\n              <option value=\"1.725\">\r\n                Very Active (Heavy exercise 6 to 7 days per week)\r\n              </option>\r\n              <option value=\"1.9\">\r\n                Extremely Active (Very intense exercise, and physical job,\r\n                exercise multiple times per day)\r\n              </option>\r\n            </select>\r\n          </div>\r\n          <button type=\"button\" onClick={() => this.CalculateCal()}>\r\n            Calculate Calories\r\n          </button>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    let resultCalories;\r\n    if (this.state.calories) {\r\n      resultCalories = <div className=\"result\">{this.state.calories}</div>;\r\n    }\r\n\r\n    return (\r\n      <div id=\"bmrcalc\">\r\n        <div className=\"form\">\r\n          <h2>BMR &amp; Daily Calorie Calculator</h2>\r\n          {error}\r\n          <div className=\"inputwrap\">\r\n            <label className=\"label\">Gender</label>\r\n\r\n            <label>\r\n              <input\r\n                type=\"radio\"\r\n                className=\"genderM\"\r\n                checked={this.state.gender === \"1\"}\r\n                onChange={this.handleGenderChange}\r\n                name=\"gender\"\r\n                value=\"1\"\r\n              />\r\n              Male\r\n            </label>\r\n\r\n            <label>\r\n              <input\r\n                type=\"radio\"\r\n                className=\"genderF\"\r\n                checked={this.state.gender === \"2\"}\r\n                onChange={this.handleGenderChange}\r\n                name=\"gender\"\r\n                value=\"2\"\r\n              />\r\n              Female\r\n            </label>\r\n          </div>\r\n\r\n          <div className=\"inputwrap\">\r\n            <label className=\"label\">Weight in Kilogram</label>\r\n            <input\r\n              type=\"number\"\r\n              value={this.state.weight}\r\n              onChange={this.handleWeightChange}\r\n              name=\"weight\"\r\n              className=\"weight\"\r\n              min=\"0\"\r\n              max=\"999\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"inputwrap\">\r\n            <label className=\"label\">Height in cm</label>\r\n            <input\r\n              type=\"number\"\r\n              value={this.state.heightCm}\r\n              onChange={this.handleHeightCmChange}\r\n              name=\"heightCm\"\r\n              className=\"heightFeet heightCm\"\r\n              min=\"0\"\r\n              max=\"220\"\r\n            />\r\n\r\n            {/* <input type=\"number\" value={this.state.heightFeet} onChange={this.handleHeightFeetChange} name=\"heightFeet\" className=\"heightFeet\" min=\"0\" max=\"8\" /> */}\r\n            {/* <input type=\"number\" value={this.state.heightInchess} onChange={this.handleHeightInchesChange} name=\"heightInches\" className=\"heightInches\" min=\"0\" max=\"11\" /> */}\r\n          </div>\r\n\r\n          <div className=\"inputwrap\">\r\n            <label className=\"label\">Age in years</label>\r\n            <input\r\n              type=\"number\"\r\n              value={this.state.age}\r\n              onChange={this.handleAgeChange}\r\n              className=\"age\"\r\n              name=\"age\"\r\n              min=\"0\"\r\n              max=\"120\"\r\n            />\r\n          </div>\r\n\r\n          <button type=\"button\" onClick={() => this.calculateBMR()}>\r\n            Calculate BMR\r\n          </button>\r\n          {resultBmr}\r\n\r\n          {calcCalories}\r\n          {/* <div className=\"workout\">\r\n                        <div className=\"inputwrap\">\r\n                            <label className=\"label\">Workout in a Week</label>\r\n                            <select className=\"activity\" value={this.state.activity} onChange={this.handleActivityChange} name=\"activity\">\r\n                                <option value=\"\">Select your Activity</option>\r\n                                <option value=\"1.2\">Sedentary (Very little or no exercise, and desk job)</option>\r\n                                <option value=\"1.375\">Lightly Active (Light exercise 1 to 3 days per week)</option>\r\n                                <option value=\"1.55\">Moderately Active (Moderate exercise 3 to 5 days per week)</option>\r\n                                <option value=\"1.725\">Very Active (Heavy exercise 6 to 7 days per week)</option>\r\n                                <option value=\"1.9\">Extremely Active (Very intense exercise, and physical job, exercise multiple times per day)</option>\r\n                            </select>\r\n                        </div>\r\n                        <button type=\"button\">Calculate Calories</button>\r\n                    </div> */}\r\n          {resultCalories}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Bmr;\r\n","import \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport BMR from \"./components/Bmr\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BMR />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}